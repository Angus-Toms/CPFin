#include "example.hpp"

int main() {

	std::vector<double> data = {0.6073263501188064, 0.025233649953305237, 0.1822678620798328, 0.27297410544018075, 0.4986167101652882, 6.649484840738272, 5.248570116337538, 4.866701923784924, 4.739185457734884, 5.325322810813323, 3.478675431659109, 4.298297876933801, 4.2891562207727265, 4.387804837097617, 4.033798474085341, 4.783184680292634, 4.353445501827917, 4.401000178228241, 4.407399364461923, 4.514491389291669, 4.176823130718764, 4.462933232609523, 4.396802253400046, 4.433944177539755, 4.365534364205338, 4.345570293743029, 4.348939768706869, 4.44015980768103, 4.363923699415582, 4.416509544149559, 4.286351320267488, 4.4835654282961634, 4.295162375781323, 4.346029308913837, 4.44632410071273, 4.237604164168806, 4.346522729951177, 4.374562945516945, 4.395405157886395, 4.329179483934169, 4.3591834437665815, 4.4329981823916675, 4.3635374449070286, 4.351892322565473, 4.392456429745034, 4.4042730117642686, 4.255029336077179, 4.35320282084198, 4.384637486956073, 4.398794396457392, 4.362181134119748, 4.495017012188913, 4.375522185753687, 4.311431421517177, 4.403222993584989, 4.381487909639023, 4.3707523371766195, 4.372797254388132, 4.411376606826035, 4.432869646951822, 4.3315087601189335, 4.352079439656684, 4.317063486243798, 4.419739884288905, 4.347546830072203, 4.442445737029231, 4.3485935882883675, 4.398092180795708, 4.409215099992143, 4.3674123707157495, 4.417856015528613, 4.361209374174006, 4.371457360531911, 4.411834013626665, 4.39481267984317, 4.489775882165031, 4.361888543381967, 4.26230844502289, 4.422175372351515, 4.322613481894634, 4.394850887736816, 4.3691763345397385, 4.4375021949399835, 4.341564176421121, 4.385418744064631, 4.400169663920734, 4.367572608499058, 4.426388938031143, 4.354980950416751, 4.326246090659505, 4.4280297614004125, 4.402723445738223, 4.364205011169822, 4.458509942463867, 4.36534683626723, 4.541090695048618, 4.312078801685257, 4.4969372993561665, 4.357035977950586, 4.312383174548424};

	std::vector<std::time_t> dates;
	for (size_t i = 0; i < data.size(); ++i) {
		dates.push_back(std::time(nullptr) + i);
	}

	auto ps = PriceSeries();
	ps.setCloses(data);
	ps.setDates(dates);

	// Test Time Series analyses
	const auto ar = ps.getAR(5);
	std::cout << ar->toString();
	ar->forecast(50);
	ar->plot();

	// TODO: Reintroduce learning mean through OLS, stick with this test data

	return 0;
}