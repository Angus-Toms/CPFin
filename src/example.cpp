#include "example.hpp"

#include <chrono>
#include <iostream>
#include "overlays/sma.hpp"
#include "overlays/bollinger.hpp"
#include "timeseries/ar.hpp"
#include "timeseries/ma.hpp"
#include "timeseries/arma.hpp"

#include "priceseries.hpp"

int main() {
  // // Fetch data
  // const auto ps = PriceSeries::getPriceSeries("AAPL", "2020-01-01", "2020-12-31");

  // // Add indicators
  // ps->addRSI();
  // ps->addBollingerBands();

  // // View and export results 
  // ps->plot();
  // ps->exportCSV("aapl.csv");

  std::vector<double> data = {0.0, 0.0, 0.0, 0.0, 0.0, -0.44610406997745056, -0.6234758775677651, 0.8008236251748312, 2.8800239519874835, 3.19726929443503, 1.1418866165655643, 0.8804201093403818, 1.3352245949530113, -0.30618240597808855, -0.5007362075864086, 0.9456906218344229, 1.0610804279990376, 0.9901560185964553, 0.41788079502969666, 2.274779912712287, 2.4072287940875547, 0.27954626223253276, 0.2591572811192058, 1.7150160369828182, 0.8533797092207853, 0.260055652730649, 1.7224204517801835, 2.5266365313561825, 1.5234128737551833, 0.24517763978928525, 0.8804917544405116, 1.9466888829273292, 1.5064736605366094, 1.3741346625069053, 2.8178738098539293, 4.240215379727894, 3.6394914541161367, 2.134264532898523, 2.1159474119219364, 1.9998868887055328, 0.3636948102558869, 0.05511812560847923, 1.3701530384792038, 1.7723287463403437, 2.5592587169379013, 1.1527455455310522, -0.47852462390824496, 0.9802751017055134, 1.0552802604784506, -0.7100320263800916, 0.30708750560089515, 3.2660459759038454, 2.837068183545804, 1.3008005099948003, 0.9279121766092986, 0.8696589144157914, 1.011227724254856, 0.18934599920551068, -0.3994193978009324, 0.8951433828070163, 1.0087854427213774, 0.8774257736657035, -1.5580461153738512, -1.9862969860476178, 0.8996875141450162, 0.6593406573416036, 0.1152564306366024, 0.428706285258086, 0.4727731513637511, -0.1273448639191739, 0.029442350797712125, 3.0870185610995007, 4.26377936841475, 3.528883248715652, 2.2331038332824904, 0.8356214777515287, -0.3503293196411796, 0.9283303781902708, 2.4484124227495516, 2.85037896134177, 2.2945279885702496, -0.478945804144261, -1.2312052330694465, 1.6819622462723334, 2.277917630127073, 1.2946691973581954, 1.0268477460053411, -0.6440637959327494, -1.2941695199819716, 1.5550349479311527, 2.3086662266023126, 1.5402113345165533, 0.19708399304969232, -0.16574077327007458, 1.158271639877071, 1.1820672381362014, 0.11771838193458534, 0.9032474101210305, 1.2794164449429892, 0.5135399965826981, 0.30957120516904, 0.6160563489521366, 0.6212601692412718, 0.17899662140226638, 1.1337821399108658, 1.897898508278994, 0.27060077340107547, 1.823293437410754, 3.1045299844539618, 0.9883686150545293, -0.0014058852210419581, 0.473597156866401, 0.2722559338754358, 1.6124730883628096, 1.6668816841190766, 1.0875974607521544, 2.5560613799541767, 1.3544418733004837, 0.33426166292821957, 0.9015134627605683, 2.7457720955467644, 3.036805405909096, 1.7645966905816919, 2.244328504744381, 0.4861067290164418, -0.4537320390222785, 1.4269054290022285, 1.0349857843358008, 0.6512383810427541, 0.9311652644168837, 1.1174227461029878, 1.0837823670139413, 2.2721901786757304, 1.7713375089687067, -0.6751109572869476, -0.8457666185914978, 0.5807126176438618, 1.3615252203746466, 2.390943136103984, 2.311157549721265, 0.9064647700774545, 0.3934322086585431, 0.7196099659197371, -0.0799244528236303, -0.917845116094633, 0.24501826230730436, 1.3326330890296416, 1.8635370907895916, 1.8207324564598482, -0.330505569624407, -1.2321431430620575, -0.04665342147977408, 1.3802818429327917, 0.6563736761819083, 1.350073757905164, 1.7497650000891345, 1.530340046960772, 2.5597916467858854, 1.493193091289458, 0.41229039801676887, 0.17151172204536133, 0.8513983455217533, 1.009599016829922, 1.4146095067357787, 0.6362022964737661, 1.5285773972415724, 1.7018155550766758, 1.1482602840236007, 0.9167721153163924, 0.40511988611224936, 0.419907919235261, -0.02317449810065121, -1.4386850858896825, -1.0483193251659229, 1.2455538470639418, 3.0980608229482005, 1.3017549889276165, -1.5942897144687043, -2.0072816698019995, 0.8307119535538348, 3.1751282017130333, 2.6351668621747852, 0.6965098434533405, 1.2402917753034002, 2.314387106079421, 2.4718434374192007, 3.4975423053939387, 2.8453155691544603, 2.048346431009167, 1.2065544863576179, 0.15249275692248077, 0.3883221856597705, 2.254131426946189, 1.3390554812294122, -0.04956589569938363, 2.4878165718989043, 2.001282000098317, -0.878317119316483, -1.2415075623967222, 0.3625043752694874, 1.742666871937768, 0.1343288492251645, -1.1996148537694267, -0.8426041123313015, 0.6001760216455485, 0.5691059678760388, -0.8188566768318972, -0.9097284199680401, 1.355116367811814, 1.771058577129812, 0.6871089125283563, 0.4066885308274464, 0.5530165777142372, 2.217032901181365, 2.3134878208766896, 0.7589739771840103, 0.8450526321558613, 1.3956694318891267, 0.8002907666320651, 0.7268920623960149, 0.6774365295996821, 0.13474575570831948, -0.049178856278827676, 0.877038983008474, 2.62395894837272, 1.0593035470782974, -1.6222704137252948, -0.8734435009729451, 1.7436858598349763, 2.408234766285875, -0.6380769712843921, -1.4560990762997803, 0.014907329877090203, -0.34160806531982796, -1.1837245756752355, -0.3978693656087623, -0.024424113388651247, -1.2880676747206732, -0.9505602400246496, 0.9057564386758405, 0.9636165361858251, -0.4439811267770099, -0.7999961157393468, -0.8308038131087347, 0.06444718212244342, -0.01461106278806007, 0.3411770333675353, 1.1927108735629217, 1.9372593791018065, 1.6590622387079312};
  ARMA arma(data);
  arma.train(5, 2);

  std::cout << "Mean: " << arma.getMean() << std::endl;

  std::cout << "Phi coefficients: " << std::endl;
  for (auto phi : arma.getPhis()) {
    std::cout << phi << std::endl;
  }

  std::cout << "Theta coefficients: " << std::endl;
  for (auto theta : arma.getThetas()) {
    std::cout << theta << std::endl;
  }

  return 0;
}