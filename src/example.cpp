#include "example.hpp"

#include <chrono>
#include <iostream>
#include "overlays/sma.hpp"
#include "overlays/bollinger.hpp"
#include "timeseries/ar.hpp"
#include "timeseries/ma.hpp"
#include "timeseries/arma.hpp"

#include "priceseries.hpp"

int main() {
  // // Fetch data
  // const auto ps = PriceSeries::getPriceSeries("AAPL", "2020-01-01", "2020-12-31");

  // // Add indicators
  // ps->addRSI();
  // ps->addBollingerBands();

  // // View and export results 
  // ps->plot();
  // ps->exportCSV("aapl.csv");

  // Example AR model, X_t = 2X_{t-1} - 1X_{t-2}
  std::vector<double> data = {0.0, 2.429982153980172, 0.24898100823934854, -1.2209794074070102, -0.017292769426492216, -0.042387281637875, -0.4880053643863833, -0.7372647376778069, -1.0339855359570707, -1.0900378935664368, 0.012152836816846813, 2.3512263389285, -0.4063417112178558, -0.5491387185541611, 0.7881857819695804, 0.15434967354448248, -0.1320862471671038, -1.6845040783648533, 0.808373784300308, 1.3371526532955809, 1.649862100044071, -0.31654884109979853, -1.2478009216956178, -0.8126415037291383, 1.8996765387278733, 0.9425397854613363, -0.60143015829715, 0.32187396954240644, 0.9594460359050823, 0.534516613925948, 0.11994075086631643, -0.9922540008046896, -0.8312450085292702, -0.937550289668211, -1.6867330478359797, -1.791343113809467, -0.6434136003372957, 0.4238688334353453, -0.04255905108032562, 0.4077733290084541, -0.2510494954278758, 0.4184509018948694, 0.4863598501797651, 0.8607747360877785, 0.0387015388428002, -1.057355999310562, -1.1819334333343439, -0.9877231176229433, -0.6666694583921582, 1.2748391085073307, 1.1991747176215974, 0.09416837498313246, -1.0330816290881224, -0.1827702208407958, 1.3446082346959118, 1.9258235409988964, 1.281351784189956, -0.33921622021873593, 0.24688812611488886, -0.30859455271675573, -0.20474148203659753, -0.14957811205297783, -1.4689037007773666, -0.9199526711812364, -1.2271084311094824, -1.2783632359969936, -0.9495574133421364, -0.04934992471594993, 0.7663882372361908, 0.19768414606405477, -0.6547851788509067, -0.58764708595399, -1.0613327772531096, -0.5857169952350743, -0.03624186495368681, -0.32643658790067126, -0.8933434139153344, -1.0597515324998716, -1.308357959138735, -1.2229516939008922, 0.2554224821100968, -0.0014442966085519982, -0.4116091949226295, 0.27239836046661725, 0.12503960583198293, 0.5035377370878851, 1.5660397076320636, 1.0878986924841811, -0.563358521148289, 1.750780129715116, 1.8621823036561875, 0.2567930495122062, 1.065520494516877, 0.5619206990918312, -0.07747244197398528, -1.7028065530962884, 0.2988964107257924, 1.5826244937623646, 1.116533480232591, 0.8969493510307001};
  MA ma(data);
  ma.train(2);
  ma.forecast(3);

  return 0;
}